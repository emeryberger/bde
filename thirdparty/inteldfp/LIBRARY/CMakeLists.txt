set(target inteldfp)
message(VERBOSE "Processing target \"${target}\"")

add_library(${target} STATIC
    src/inteldfp/bid64_acos.c
    src/inteldfp/bid64_acosh.c
    src/inteldfp/bid64_asin.c
    src/inteldfp/bid64_asinh.c
    src/inteldfp/bid64_atan.c
    src/inteldfp/bid64_atan2.c
    src/inteldfp/bid64_atanh.c
    src/inteldfp/bid64_cbrt.c
    src/inteldfp/bid64_cos.c
    src/inteldfp/bid64_cosh.c
    src/inteldfp/bid64_erf.c
    src/inteldfp/bid64_erfc.c
    src/inteldfp/bid64_exp.c
    src/inteldfp/bid64_exp10.c
    src/inteldfp/bid64_exp2.c
    src/inteldfp/bid64_expm1.c
    src/inteldfp/bid64_hypot.c
    src/inteldfp/bid64_lgamma.c
    src/inteldfp/bid64_log.c
    src/inteldfp/bid64_log10.c
    src/inteldfp/bid64_log1p.c
    src/inteldfp/bid64_log2.c
    src/inteldfp/bid64_pow.c
    src/inteldfp/bid64_sin.c
    src/inteldfp/bid64_sinh.c
    src/inteldfp/bid64_tan.c
    src/inteldfp/bid64_tanh.c
    src/inteldfp/bid64_tgamma.c
    src/inteldfp/bid128_acos.c
    src/inteldfp/bid128_acosh.c
    src/inteldfp/bid128_asin.c
    src/inteldfp/bid128_asinh.c
    src/inteldfp/bid128_atan.c
    src/inteldfp/bid128_atan2.c
    src/inteldfp/bid128_atanh.c
    src/inteldfp/bid128_cbrt.c
    src/inteldfp/bid128_cos.c
    src/inteldfp/bid128_cosh.c
    src/inteldfp/bid128_erf.c
    src/inteldfp/bid128_erfc.c
    src/inteldfp/bid128_exp.c
    src/inteldfp/bid128_exp10.c
    src/inteldfp/bid128_exp2.c
    src/inteldfp/bid128_expm1.c
    src/inteldfp/bid128_hypot.c
    src/inteldfp/bid128_lgamma.c
    src/inteldfp/bid128_log.c
    src/inteldfp/bid128_log10.c
    src/inteldfp/bid128_log1p.c
    src/inteldfp/bid128_log2.c
    src/inteldfp/bid128_pow.c
    src/inteldfp/bid128_sin.c
    src/inteldfp/bid128_sinh.c
    src/inteldfp/bid128_tan.c
    src/inteldfp/bid128_tanh.c
    src/inteldfp/bid128_tgamma.c
    src/inteldfp/bid32_add.c
    src/inteldfp/bid32_compare.c
    src/inteldfp/bid32_div.c
    src/inteldfp/bid32_fdimd.c
    src/inteldfp/bid32_fma.c
    src/inteldfp/bid32_fmod.c
    src/inteldfp/bid32_frexp.c
    src/inteldfp/bid32_ldexp.c
    src/inteldfp/bid32_llrintd.c
    src/inteldfp/bid32_logb.c
    src/inteldfp/bid32_logbd.c
    src/inteldfp/bid32_lrintd.c
    src/inteldfp/bid32_lround.c
    src/inteldfp/bid32_minmax.c
    src/inteldfp/bid32_modf.c
    src/inteldfp/bid32_mul.c
    src/inteldfp/bid32_nearbyintd.c
    src/inteldfp/bid32_next.c
    src/inteldfp/bid32_nexttowardd.c
    src/inteldfp/bid32_noncomp.c
    src/inteldfp/bid32_quantexpd.c
    src/inteldfp/bid32_quantize.c
    src/inteldfp/bid32_rem.c
    src/inteldfp/bid32_round_integral.c
    src/inteldfp/bid32_scalb.c
    src/inteldfp/bid32_scalbl.c
    src/inteldfp/bid32_sqrt.c
    src/inteldfp/bid32_string.c
    src/inteldfp/bid32_to_int16.c
    src/inteldfp/bid32_to_int32.c
    src/inteldfp/bid32_to_int64.c
    src/inteldfp/bid32_to_int8.c
    src/inteldfp/bid32_to_uint16.c
    src/inteldfp/bid32_to_uint32.c
    src/inteldfp/bid32_to_uint64.c
    src/inteldfp/bid32_to_uint8.c
    src/inteldfp/bid64_add.c
    src/inteldfp/bid64_compare.c
    src/inteldfp/bid64_div.c
    src/inteldfp/bid64_fdimd.c
    src/inteldfp/bid64_fma.c
    src/inteldfp/bid64_fmod.c
    src/inteldfp/bid64_frexp.c
    src/inteldfp/bid64_ldexp.c
    src/inteldfp/bid64_llrintd.c
    src/inteldfp/bid64_logb.c
    src/inteldfp/bid64_logbd.c
    src/inteldfp/bid64_lrintd.c
    src/inteldfp/bid64_lround.c
    src/inteldfp/bid64_minmax.c
    src/inteldfp/bid64_modf.c
    src/inteldfp/bid64_mul.c
    src/inteldfp/bid64_nearbyintd.c
    src/inteldfp/bid64_next.c
    src/inteldfp/bid64_nexttowardd.c
    src/inteldfp/bid64_noncomp.c
    src/inteldfp/bid64_quantexpd.c
    src/inteldfp/bid64_quantize.c
    src/inteldfp/bid64_rem.c
    src/inteldfp/bid64_round_integral.c
    src/inteldfp/bid64_scalb.c
    src/inteldfp/bid64_scalbl.c
    src/inteldfp/bid64_sqrt.c
    src/inteldfp/bid64_string.c
    src/inteldfp/bid64_to_int16.c
    src/inteldfp/bid64_to_int32.c
    src/inteldfp/bid64_to_int64.c
    src/inteldfp/bid64_to_int8.c
    src/inteldfp/bid64_to_uint16.c
    src/inteldfp/bid64_to_uint32.c
    src/inteldfp/bid64_to_uint64.c
    src/inteldfp/bid64_to_uint8.c
    src/inteldfp/bid128_add.c
    src/inteldfp/bid128_compare.c
    src/inteldfp/bid128_div.c
    src/inteldfp/bid128_fdimd.c
    src/inteldfp/bid128_fma.c
    src/inteldfp/bid128_fmod.c
    src/inteldfp/bid128_frexp.c
    src/inteldfp/bid128_ldexp.c
    src/inteldfp/bid128_llrintd.c
    src/inteldfp/bid128_logb.c
    src/inteldfp/bid128_logbd.c
    src/inteldfp/bid128_lrintd.c
    src/inteldfp/bid128_lround.c
    src/inteldfp/bid128_minmax.c
    src/inteldfp/bid128_modf.c
    src/inteldfp/bid128_mul.c
    src/inteldfp/bid128_nearbyintd.c
    src/inteldfp/bid128_next.c
    src/inteldfp/bid128_nexttowardd.c
    src/inteldfp/bid128_noncomp.c
    src/inteldfp/bid128_quantexpd.c
    src/inteldfp/bid128_quantize.c
    src/inteldfp/bid128_rem.c
    src/inteldfp/bid128_round_integral.c
    src/inteldfp/bid128_scalb.c
    src/inteldfp/bid128_scalbl.c
    src/inteldfp/bid128_sqrt.c
    src/inteldfp/bid128_string.c
    src/inteldfp/bid128_to_int16.c
    src/inteldfp/bid128_to_int32.c
    src/inteldfp/bid128_to_int64.c
    src/inteldfp/bid128_to_int8.c
    src/inteldfp/bid128_to_uint16.c
    src/inteldfp/bid128_to_uint32.c
    src/inteldfp/bid128_to_uint64.c
    src/inteldfp/bid128_to_uint8.c
    src/inteldfp/strtod32.c
    src/inteldfp/strtod64.c
    src/inteldfp/strtod128.c
    src/inteldfp/wcstod32.c
    src/inteldfp/wcstod64.c
    src/inteldfp/wcstod128.c
    src/inteldfp/bid32_acos.c
    src/inteldfp/bid32_acosh.c
    src/inteldfp/bid32_asin.c
    src/inteldfp/bid32_asinh.c
    src/inteldfp/bid32_atan.c
    src/inteldfp/bid32_atan2.c
    src/inteldfp/bid32_atanh.c
    src/inteldfp/bid32_cbrt.c
    src/inteldfp/bid32_cos.c
    src/inteldfp/bid32_cosh.c
    src/inteldfp/bid32_erf.c
    src/inteldfp/bid32_erfc.c
    src/inteldfp/bid32_exp.c
    src/inteldfp/bid32_exp10.c
    src/inteldfp/bid32_exp2.c
    src/inteldfp/bid32_expm1.c
    src/inteldfp/bid32_hypot.c
    src/inteldfp/bid32_lgamma.c
    src/inteldfp/bid32_log.c
    src/inteldfp/bid32_log10.c
    src/inteldfp/bid32_log1p.c
    src/inteldfp/bid32_log2.c
    src/inteldfp/bid32_pow.c
    src/inteldfp/bid32_sin.c
    src/inteldfp/bid32_sinh.c
    src/inteldfp/bid32_tan.c
    src/inteldfp/bid32_tanh.c
    src/inteldfp/bid32_tgamma.c
    src/inteldfp/bid32_sub.c
    src/inteldfp/bid32_to_bid128.c
    src/inteldfp/bid32_to_bid64.c
    src/inteldfp/bid64_to_bid128.c
    src/inteldfp/bid128_2_str_tables.c
    src/inteldfp/bid_binarydecimal.c
    src/inteldfp/bid_convert_data.c
    src/inteldfp/bid_decimal_data.c
    src/inteldfp/bid_decimal_globals.c
    src/inteldfp/bid_dpd.c
    src/inteldfp/bid_feclearexcept.c
    src/inteldfp/bid_fegetexceptflag.c
    src/inteldfp/bid_feraiseexcept.c
    src/inteldfp/bid_fesetexceptflag.c
    src/inteldfp/bid_fetestexcept.c
    src/inteldfp/bid_flag_operations.c
    src/inteldfp/bid_from_int.c
    src/inteldfp/bid_round.c
    src/inteldfp/bid128.c
    float128/dpml_ux_bid.c
    float128/dpml_ux_bessel.c
    float128/dpml_ux_cbrt.c
    float128/dpml_ux_erf.c
    float128/dpml_ux_exp.c
    float128/dpml_ux_int.c
    float128/dpml_ux_inv_hyper.c
    float128/dpml_ux_inv_trig.c
    float128/dpml_ux_lgamma.c
    float128/dpml_ux_log.c
    float128/dpml_ux_mod.c
    float128/dpml_ux_powi.c
    float128/dpml_ux_pow.c
    float128/dpml_ux_sqrt.c
    float128/dpml_ux_trig.c
    float128/dpml_ux_ops.c
    float128/dpml_ux_ops_64.c
    float128/dpml_four_over_pi.c
    float128/dpml_exception.c
    float128/sqrt_tab_t.c)

set(${target}_INCLUDE_FILES
    src/inteldfp/bid128_2_str.h
    src/inteldfp/bid128_2_str_macros.h
    src/inteldfp/bid_b2d.h
    src/inteldfp/bid_conf.h
    src/inteldfp/bid_div_macros.h
    src/inteldfp/bid_functions.h
    src/inteldfp/bid_gcc_intrinsics.h
    src/inteldfp/bid_inline_add.h
    src/inteldfp/bid_internal.h
    src/inteldfp/bid_sqrt_macros.h
    src/inteldfp/bid_strtod.h
    src/inteldfp/bid_trans.h
    src/inteldfp/bid_wrap_names.h
    src/inteldfp/dfp754.h
)

# Detecting platform endianess.
include (TestBigEndian)
test_big_endian(IS_BIG_ENDIAN)

target_compile_definitions(
    ${target}
    PRIVATE
        DECIMAL_CALL_BY_REFERENCE=0
        DECIMAL_GLOBAL_ROUNDING=1
        DECIMAL_GLOBAL_EXCEPTION_FLAGS=0
        BID_BIG_ENDIAN=$<BOOL:${IS_BIG_ENDIAN}>
        $<$<C_COMPILER_ID:AppleClang>:LINUX efi2>
        $<$<C_COMPILER_ID:Clang>:USE_REAL_MALLOC LINUX efi2>
        $<$<C_COMPILER_ID:GNU>:USE_REAL_MALLOC LINUX efi2>
        $<$<C_COMPILER_ID:MSVC>:WINNT WINDOWS WNT $<${CMAKE_CL_64}:ia32>>
        $<$<C_COMPILER_ID:SunPro>:SUNOS efi2 __linux __float80=double BID_THREAD= >
        $<$<C_COMPILER_ID:XL>:LINUX efi2 __linux __QNX__ __thread= >)

target_include_directories(
    ${target}
    PUBLIC
        $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/src>
        $<INSTALL_INTERFACE:include/${target}>)

bbs_add_target_thread_flags(${target} PRIVATE)

# This variable controls the set of headers to install
set(${target}_INCLUDE_FILES ${${target}_INCLUDE_FILES} PARENT_SCOPE)

bbs_install_target(${target})
bbs_emit_pkg_config(${target})

set_target_properties(${target} PROPERTIES BB_UOR_PARTITION thirdparty)
bbs_emit_bde_metadata(${target})
